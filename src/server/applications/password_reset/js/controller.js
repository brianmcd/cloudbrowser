// Generated by CoffeeScript 1.6.3
(function() {
  var CBPasswordReset;

  CBPasswordReset = angular.module("CBPasswordReset", []);

  CBPasswordReset.controller("ResetCtrl", function($scope) {
    var PASSWORD_EMPTY, RESET_SUCCESS, auth, currentBrowser;
    PASSWORD_EMPTY = "Please enter the password";
    RESET_SUCCESS = "The password has been successfully reset";
    $scope.safeApply = function(fn) {
      var phase;
      phase = this.$root.$$phase;
      if (phase === '$apply' || phase === '$digest') {
        if (fn) {
          return fn();
        }
      } else {
        return this.$apply(fn);
      }
    };
    currentBrowser = cloudbrowser.currentBrowser;
    auth = cloudbrowser.auth;
    $scope.password = null;
    $scope.vpassword = null;
    $scope.isDisabled = false;
    $scope.passwordError = null;
    $scope.resetSuccess = null;
    $scope.resetError = null;
    currentBrowser.getResetEmail(function(err, userEmail) {
      if (err) {
        return console.log(err);
      } else {
        return $scope.safeApply(function() {
          return $scope.email = userEmail.split("@")[0];
        });
      }
    });
    $scope.$watch("password", function() {
      $scope.passwordError = null;
      $scope.resetSuccess = null;
      return $scope.isDisabled = false;
    });
    return $scope.reset = function() {
      $scope.isDisabled = true;
      if (!$scope.password) {
        return $scope.passwordError = PASSWORD_EMPTY;
      } else {
        return auth.resetPassword($scope.password, function(err) {
          return $scope.safeApply(function() {
            if (err) {
              $scope.resetError = err.message;
            } else {
              $scope.resetSuccess = RESET_SUCCESS;
            }
            return $scope.isDisabled = false;
          });
        });
      }
    };
  });

}).call(this);
