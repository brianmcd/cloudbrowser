// Generated by CoffeeScript 1.7.1
(function() {
  var app;

  app = angular.module("Chat4", []);

  app.directive('enterSubmit', function() {
    var directive;
    return directive = {
      restrict: 'A',
      link: function(scope, element, attrs) {
        return element.bind('keydown', function(e) {
          if (e.which === 13) {
            scope.$apply(function() {
              return scope.$eval(attrs.enterSubmit);
            });
            return e.preventDefault();
          }
        });
      }
    };
  });

  app.controller("ChatCtrl", function($scope, $timeout) {
    var addMessage, browserId, chatManager, currentBrowser;
    currentBrowser = cloudbrowser.currentBrowser;
    browserId = currentBrowser.getID();
    chatManager = cloudbrowser.currentAppInstanceConfig.getObj();
    $scope.userName = "Goose_" + browserId;
    $scope.editingUserName = true;
    $scope.alertMessages = [];
    chatManager.users[browserId] = $scope.userName;
    $scope.chatManager = chatManager;
    $scope.alert = function(msg) {
      var alert;
      console.log("whoops");
      alert = {
        msg: msg
      };
      $scope.alertMessages.push(alert);
      return $timeout(function() {
        return $scope.removeAlert(alert);
      }, 3000);
    };
    $scope.removeAlert = function(alert) {
      var index;
      index = $scope.alertMessages.indexOf(alert);
      if (index >= 0) {
        return $scope.alertMessages.splice(index, 1);
      }
    };
    addMessage = function(msg, type) {
      var msgObj;
      msgObj = {
        browserId: browserId,
        msg: msg,
        userName: $scope.userName,
        time: new Date().getTime()
      };
      if (type != null) {
        msgObj.type = type;
      }
      chatManager.messages.push(msgObj);
      if (chatManager.messages.length > 1000) {
        return chatManager.messages = chatManager.messages.slice(500);
      }
    };
    $scope.changeName = function() {
      var k, name, v, _ref;
      if (!$scope.draftUserName || $scope.draftUserName === '') {
        return $scope.alert("The user name must not be empty.");
      }
      name = $scope.draftUserName.trim();
      if (name === '') {
        return $scope.alert("The user name must not be empty.");
      }
      _ref = chatManager.users;
      for (k in _ref) {
        v = _ref[k];
        if (k !== browserId && v.toLowerCase() === name.toLowerCase()) {
          return $scope.alert("Duplicate user name.");
        }
      }
      addMessage("" + $scope.userName + " is now " + name, "sys");
      $scope.userName = name;
      chatManager.users[browserId] = $scope.userName;
      return $scope.editingUserName = false;
    };
    $scope.postMessage = function() {
      addMessage($scope.currentMessage);
      return $scope.currentMessage = '';
    };
    return $scope.getMsgClass = function(msg) {
      if (msg.type === 'sys') {
        return "alert alert-success";
      }
      return "";
    };
  });

}).call(this);
